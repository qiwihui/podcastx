version: "3.4"

services:
  mongodb:
    container_name: podcastx-db
    image: "mongo:latest"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    env_file:
      - ".env"
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongo-data:/data/db
    # ports:
    #   - "127.0.0.1:27017:27017"
    networks:
      - proxy

  redis:
    container_name: podcastx-redis
    env_file:
      - ".env"
    image: "redis:5.0.4"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    volumes:
      - "redis:/data"
    networks:
      - proxy

  server:
    container_name: podcastx-server
    build:
      context: "./server"
      args:
        - "FLASK_ENV=${FLASK_ENV:-production}"
    depends_on:
      - "redis"
    env_file:
      - ".env"
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:8000/healthy}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    # ports:
    #   - "${DOCKER_WEB_PORT:-127.0.0.1:8000}:8000"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    command: /usr/local/bin/gunicorn -w 2 -b :8000 runserver:flask_app
    volumes:
      # - "${DOCKER_WEB_VOLUME:-./public:/app/public}"
      # - web-data:/usr/share/nginx/html/
      - ./server:/code
      - /data/podcastx:/data/podcastx
    networks:
      - proxy

  worker:
    container_name: podcastx-worker
    build:
      context: "./server"
      args:
        - "FLASK_ENV=${FLASK_ENV:-production}"
    command: celery worker -l info -A tasks
    depends_on:
      - "redis"
      - "mongodb"
    links:
      - "mongodb:mongodb"
    env_file:
      - ".env"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    volumes:
      # - "${DOCKER_WEB_VOLUME:-./public:/app/public}"
      # - web-data:/usr/share/nginx/html/
      - ./server:/code
      - /data/podcastx:/data/podcastx
    networks:
      - proxy

  web:
    container_name: podcastx-web
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    build:
      context:
        ./html
    ports:
      - "80"
    expose:
      - "80"
    volumes:
      - /data/podcastx:/data/podcastx
    env_file:
      - ".env"
    links:
      - server:server
    depends_on:
      - "server"
    environment:
      VIRTUAL_HOST: "${WEB_DOMAIN}"
      LETSENCRYPT_HOST: "${WEB_DOMAIN}"
      LETSENCRYPT_EMAIL: "${WEB_DOMAIN_EMAIL}"
      VIRTUAL_PORT: "${WEB_PORT:-80}"
      HTTPS_METHOD: redirect
    networks:
      - proxy

volumes:
  # web-data:
  redis: {}
  mongo-data:

networks:
  proxy:
    external:
      name: nginx-proxy
